// -*- mode:doc; coding:utf-8 -*-

:Author:      河野達也 Tatsuya_Kawano CloudianKK
:Email:       tkawano@cloudian.com
:Date:        2013年1月N日
:Revision:    v1.1

// この文書はAsciiDoc形式で記述されています。
// HTML形式に変換するには以下のようにします。
//
// # Fedora、CentOSの場合
// $ sudo yum install asciidoc source-highlight
// $ asciidoc hands-on-setup1.txt
//
// # Ubuntuの場合
// $ sudo apt-get install asciidoc source-highlight
// $ asciidoc hands-on-setup1.txt
//


= NOSQL実機ハンズオン（Riak、Hibari）付録　環境設定手順

*日本OSS推進フォーラム　若手技術者勉強会*


== 目次

- link:#0[0. 使用許諾条件]

- link:#1[1. 概要]
  * link:#1-1[1-1. 目的]

- link:#N[N. 検証用マシンのセットアップ]
  * link:#N-M[N-M. Oracle VirtualBox]
  * link:#N-M[N-M. Fedora 17]
  * link:#N-M[N-M. CentOS 6.3]
  * link:#N-M[N-M. OSインストール後の作業]

- link:#N[N. Erlangのセットアップ]

- link:#N[N. Riakのセットアップ]

- link:#N[N. Hibariのセットアップ]

- link:#N[N. BashoBenchのセットアップ]
  * link:#N-M[N-M. ]

- link:#N[N. ハンズオン用ファイルのセットアップ]


[[0]]
== 0. 使用許諾条件

この文書は *クリエイティブ・コモンズ 表示 2.1 日本 (CC BY 2.1 JP) ライセンス*
の下に提供されています。使用許諾条件を見るには、
http://creativecommons.org/licenses/by/2.1/jp/ をチェックしてください。


[[1]]
== 1. 概要

*TODO*

以下のソフトウェアで動作確認済みです。

- Oracle VM VirtualBox 4.2.6 for Mac OS X
- Fedora 17 および CentOS 6.3（いずれも64ビット版）
- Erlang/OTP 15B03-1
- Riak 1.2.1
- Hibari 0.1.9 XX

対象:

主にLinuxの初心者


[[N]]
== N. 検証用マシンのセットアップ

*TODO*

RHEL（Red Hat Enterprise Linux）、CentOS、Fedora
64ビット版

- VirtualBox、OpenStack...
- Amazon EC2、さくらVPS、Cloudn...

- NIIの環境（CentOS 5.8 64ビット版）


Post installation:

- vm.swappiness
- ファイルディスクリプター
- Ethernetまわり
- noatime


=== OSインストーラーのダウンロード

Fedora 17、以下の
- Fedora-17-x86_64-Live-Desktop.iso

CentOS 6
- CentOS-6.3-86_64-minimal.iso

CentOS 5.3
- *TODO*


=== N.M VirtualBoxによる仮想マシンの作成

Oracle VM VirtualBoxによる仮想マシンの作成方法を説明します。

システム要件
- オペレーシングシステム： Windows XX、Mac OS X、Linux ...
- に対応したCPU
- Fedora 17でRiak、Hibari、Basho Benchを動作させるなら、RAM N GB以上を推奨

VirtualBoxの *ホストオンリーアダプター* の設定:

- VirtualBox メニューから *環境設定* を選びます。
- *ネットワーク* アイコンをクリックし、ウィンドウ右側の「＋印」のついたアイコンをクリックします。
- ホストオンリーネットワークとして *vboxnet0* が追加されたら *OK* ボタンを押します。

仮想マシンの作成:

- *Oracle VM VirtualBoxマネージャー* ウィンドウの *新規* ボタンをクリックします。
- *名前とオペレーティングシステム* ウィンドウが開いたら以下の情報を入力します。
  * *名前* ：任意の仮想マシン名（例 Fedora 17 NOSQL）
  * *タイプ* ：Linux
  * *バージョン* ：Fedora (64 bit)
- *続ける* をクリックします。
- *メモリサイズ* ウィンドウでは仮想マシンに割り当てるRAMサイズを設定します。 ホストマシンのRAMに載りきる範囲内で、できるだけ大きなサイズを設定します。（例 2048MB）
- *ハードドライブ* ウィンドウでは *仮想ハードドライブを作成する* を選択し *作成* ボタンを押します。
- *ハードドライブのタイプ* ウィンドウでは、設定はそのまま（例 VDI）で *続ける* ボタンを押します。
- *物理ハードドライブにあるストレージ* を選択します。
  * ホストマシンのハードドライブ容量を少なく抑えたい場合は *可変サイズ* を選択
  * 性能をできるだけ高くしたい場合は *固定サイズ* を選択
- *ファイルの場所とサイズ* ウィンドウでは、仮想ハードドライブのサイズを *20GB* 程度に設定します。仮想ハードドライブファイルの名前はそのままでいいでしょう。サイズを設定したら *作成* ボタンをクリックします。
- *Oracle VM VirtualBoxマネージャー* ウィンドウに戻ったら、いま作成した仮想マシンが選択されていることを確認し *設定* ボタンを押します。
- 設定用のウィンドウが開いたら *システム* をクリックし、さらに *プロセッサー* タブに切り替えます。ホストマシンに搭載されたCPUが対応できる範囲で、できるだけ大きなプロセッサー数を設定します。（例 ２）
- *ネットワーク* をクリックします。
  * *アダプター１* は *NAT* のままにしておきます
  * ホストマシンから ssh で接続するために *アダプター２* を有効化し、 *割り当て* に *ホストオンリーアダプター* を選択し、 *名前* に *vboxnet0* を選択します。
- *OK* をクリックします。


Fedora 17のインストール:

- *起動* ボタンをクリックします。
- *Select start-up disk* ウィンドウではフォルダーアイコンをクリックし、Fedora 17 Live CD の ISO イメージファイル（例 Fedora-17-x86_64-Live-Desktop.iso）を選択します。
- *Start* ボタンを押すと仮想マシンが起動します。
- *Welcome to Fedora* 画面が開いたら *Install to Hard Drive* をクリックします。
- 最初の画面でキーボード配列を選択します。（例 Japanese）
- 次の画面では *Basic Storage Devices* を選択します。
- The storage device below may contain dataと表示されたら *Yes, discard any data*（全データを削除する）をクリックします。
- 次の画面では任意の *Hostname* を設定します。 （例 fedora17-nosql.localdomain）
- 次の画面ではタイムゾーンを設定します。（例 Asia/Tokyo）
- 次の画面では root アカウントのパスワードを６文字以上で設定します。（例 nosql2root）　もし weak password（脆弱なパスワード）と表示されたら、*Cancel* を押して再設定するか、 *Use anyway* を押してそのまま使用するか選びます。
- 次の画面では *Use All Space* を選択します。 *Next* ボタンを押すと *Confirm* ウィンドウが表示されるので、 *Write changes to disk* をクリックします。
- Live CDのデータがハードドライブにコピーされるまで数分かかります。
- *Conguraturations, your Fedora installation is complete.* と表示されたら、 VirtualBoxウィンドウ下側にあるCDのアイコンをクリックして *Remove disk from virtual drive* を選択します。 *Reboot* ボタンをクリックして再起動します。

- 再起動後 *Welcome* 画面が開いたら *Forward* ボタンを押します。
- *License Information* を読んで *Forward* ボタンを押します。

:handsonuser: ossforum
:handsonpw:   nosql2

- *Create User* 画面でハンズオンで使用するユーザー（例 Username: *{handsonuser}* 、Password: *{handsonpw}* ）を作成します。 * Add to Administrators group* をオンにします。
- *Date and Time* 画面では *Synchronize date and time over the network* をオンにします。
- *Hardware Profile* 画面では、Fedoraプロジェクトに匿名のハードウェア情報を送信するかどうかを選択してください。
- *Finish* ボタンを押すとセットアップが完了します。先ほど作成したハンズオン用ユーザーでログインします。

Fedoraの各パッケージを最新版に更新:

- 画面左上の *Activities* をクリックし *up* とタイプします。 *Software Update* のアイコンが表示されたら、クリックして起動します。
- 更新が必要なパッケージが表示されたら *Install Update* ボタンをクリックしてインストールします。初回は数百個のパッケージが更新されるので少し時間がかかるかもしれません。
- もし更新後に再起動を促されたら *Restart* ボタンを押して再起動します。

VirtualBox Guest Additionsのインストール:

- ここからは主にターミナル（端末）で作業します。 *Activities* をクリックして *ter* と入力します。 *Terminal* アイコンが表示されたらクリックして起動します。

- ターミナルで以下のコマンドを実行します。パスワードを聞かれたら、いまログインしているユーザー（ハンズオンユーザー）のパスワードを入力します。

----
# □で改行キーを押します

$ sudo yum -y update kernel □
$ sudo yum -y install kernel-devel kernel-headers dkms gcc gcc-c++ □
----

念のため再起動します。

----
$ sudo reboot
----

再起動したらGuest Additionsをインストールします。

- VirtualBoxの *Devices* メニューから *Install Guest Addtions* を選択します。
- もし自動的に実行するか聞かれたら、*Cancel* をクリックします。
- ターミナルを開き以下のコマンドを実行します。

----
# ログインユーザー名の部分を実際のユーザー名（例 ossforum）で
# 置き換えてください。

$ cd /run/media/ログインユーザー名/VBOX* □
$ sudo sh VBoxLinuxAdditions.run □

# スクリプトが実行され、OKが表示されていきます。

$ sudo reboot □
----

再起動すると画面のサイズを大きく設定できるようになります。VirtualBoxウィンドウ右下のCDアイコンから *Remove disk from virtual drive* を選び、Guest AddtionsのCDを取り出します。


=== インストール後の作業

Firewall

----
$ sudo service iptables stop □
$ sudo chkconfig iptables off □
----


openssh-server:

----
$ sudo service sshd start □
$ sudo chkconfig sshd on □
----

スナップショットの取得:

*TODO*


[[N]]
== N. Erlangのセットアップ

Riak や Hibari のインストールに先立って Erlang をソースコードからビルドしてインストールします。 Erlang のバージョンは現時点（2013年１月）の最新版である R15B03-1 を使います。

=== N.M. Erlangのビルドに必要なソフトウェアのインストール

最初に Erlang のビルドに必要なソフトウェアをインストールします。

----
$ sudo yum install -y gcc glibc-devel make ncurses-devel openssl-devel autoconf □
----

NOTE: Debian / Ubuntu や Mac OS X へのインストール
http://docs.basho.com/riak/1.2.1/tutorials/installation/Installing-Erlang/


=== N.M. Kerlのインストール

----
$ mkdir ~/bin □
$ curl -O https://raw.github.com/spawngrid/kerl/master/kerl □
$ chmod a+x kerl □
$ mv kerl ~/bin
$ echo 'KERL_CONFIGURE_OPTIONS="--enable-hipe --enable-smp-support --enable-threads --enable-kernel-poll" ' > ~/.kerlrc □
----

*TODO* Riakはdisable-hipeがディフォルト？


=== N.M. 

----
$ kerl build R15B03-1 r15b03-1 □
----

Erlangのソースコードがダウンロードされ、ビルドが実行されます。マシンの性能によりますが、一般的なマシンなら15分ほどかかります。ビルドに成功したら Erlang/OTP R15B03-1 (r15b03-1) has been successfully built と表示されます。

Erlangをログインしているユーザーのホームディレクトリーにインストールします。

----
$ kerl install r15b03-1 ~/erlang/r15b03-1 □
----

Erlang R15B03-1を


----
$ sudo yum install -y nano □
$ nano .bashrc □
----

----
. ~/erlang/r15b03-1/activate
----

----
$ source .bashrc □
----

試しに Erlang のシェルを起動してみましょう。

----
$ erl □
Erlang R15B03 (erts-5.9.3.1) [source] [64-bit] [smp:2:2] [async-threads:0] [hipe] [kernel-poll:false]

Eshell V5.9.3.1 (abort with ^G)
1> 
----

Erlang シェルは q コマンドで終了できます。
----
1> q(). □
ok
----

----
$ sudo yum install -y rlwrap □
----


[[N]]
== N. Riakのセットアップ

Riak をソースコードからビルドします。

Note:
Riakは
http://docs.basho.com/riak/1.2.1/tutorials/installation/Installing-on-RHEL-and-CentOS/

まず Riak のビルドに必要なソフトウェアをインストールします。ターミナルで以下のコマンドを実行します。

----
$ sudo yum install gcc gcc-c++ glibc-devel make git wget □
----

----
$ cd □
$ wget http://downloads.basho.com.s3-website-us-east-1.amazonaws.com/riak/1.2/1.2.1/riak-1.2.1.tar.gz □
$ tar zxvf riak-1.2.1.tar.gz -C riak □
----

----
$ cd ~/riak □
$ make rel □
----

マルチノードに対応させる:

----
$ cd ~/riak/rel
$ mv riak riak1
$ cp -rp riak1 riak2
$ cp -rp riak1 riak3
$ cp -rp riak1 riak4
----

設定ファイルの変更

vm.args の変更

Riak ノード名の設定
----
$ nano riak1/etc/vm.args
----

----
-name riak@127.0.0.1
----

----
-name riak1@127.0.0.1
----

Ctrl + X キーで保存して終了します。

同様に riak2/etc/vm.args 、riak3/etc/vm.args 、riak4/etc/vm.args も変更してください。

app.config の修正

通信に使うポートを変更
ストレージバックエンドを Level DB に切り替えることで、セカンダリー・インデックスが使用できるようにします。
----


----

[[N]]
== N. Hibariのセットアップ

repoのインストール:
----
$ mkdir -p ~/bin □
$ curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo □
$ chmod a+x ~/bin/repo □
----

Hibariソースコードのダウンロード（仮　開発版を使用）
----
$ mkdir ~/hibari □
$ cd ~/hibari □
$ repo init -u git://github.com/hibari/manifests.git -m hibari-default.xml -b dev □
...（中略）
Your Name [ossforum]: □（そのまま改行キーを押す）
Your Email [ossforum@...]: □（そのまま改行キーを押す）

Your identity is: ...
is this correct [y/N]? y □
...（中略）
Enable color display in this user account (y/N)? y □

repo initialized in /home/ossforum/hibari
----

@TODO repo launcher version is 1.17, not 1.18

----
$ repo sync □
...（中略）
Fetching projects: 100% (22/22), done.  
----

----
$ repo forall -c "git branch dev origin/dev" □
$ repo forall -c "git checkout dev" □
----

----
$ . ~/erlang/r15b03-1/activate
$ cd ~/hibari/hibari
----

パッチをあてる
----

----

----
$ make package □
----

----
$ cd ~/hibari/hibari/rel □
$ mv hibari hibari1 □
$ cp -rp hibari1 hibari2 □
$ cp -rp hibari1 hibari3 □
----

設定ファイルの変更
----

----


[[N]]
== N. ハンズオン用ファイルのセットアップ

----
$ cd □
$ git clone git://github.com/ossforum-jp-nosql/hands-on.git □
$ git checkout v1.1-Jan-2013 □
----

[[N]]
== N. Basho Benchのセットアップ

Basho Benchのインストール:

R のインストール:

Riak Client のインストール:

